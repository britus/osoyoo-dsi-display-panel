From 80aa4f08897170aded6b9caa2f44599c3f23483b Mon Sep 17 00:00:00 2001
From: "B. Eschrich (IS4IT GmbH)" <bjoern.eschrich@is4it.de>
Date: Mon, 12 Oct 2020 19:25:11 +0200
Subject: [PATCH] Adding polling mode to touchscreen driver edt-ft5x06

Signed-off-by: B. Eschrich (IS4IT GmbH) <bjoern.eschrich@is4it.de>
---
 drivers/input/touchscreen/edt-ft5x06.c | 36 +++++++++++++++++++++++---
 1 file changed, 33 insertions(+), 3 deletions(-)

diff --git a/drivers/input/touchscreen/edt-ft5x06.c b/drivers/input/touchscreen/edt-ft5x06.c
index 3a4f18d34..877923398 100644
--- a/drivers/input/touchscreen/edt-ft5x06.c
+++ b/drivers/input/touchscreen/edt-ft5x06.c
@@ -126,6 +126,9 @@ struct edt_ft5x06_ts_data {
 
 	struct edt_reg_addr reg_addr;
 	enum edt_ver version;
+
+	struct work_struct worker;
+	u8 irq_capability_enabled;
 };
 
 struct edt_i2c_chip_data {
@@ -222,8 +225,10 @@ static irqreturn_t edt_ft5x06_ts_isr(int irq, void *dev_id)
 					sizeof(cmd), &cmd,
 					datalen, rdbuf);
 	if (error) {
-		dev_err_ratelimited(dev, "Unable to fetch data, error: %d\n",
-				    error);
+        /* be quiet in polling mode. what doesn't work - doesn't work! */
+		if (tsdata->irq_capability_enabled) {
+ 			dev_err_ratelimited(dev, "Unable to fetch data, error: %d\n", error);
+		}
 		goto out;
 	}
 
@@ -1069,6 +1074,18 @@ static void edt_ft5x06_disable_regulator(void *arg)
 	regulator_disable(data->vcc);
 }
 
+/* The worker task proc for polling mode with round about 60 fps
+ * but depends on hardware capability */
+static void edt_ft5x06_worker_proc(struct work_struct *work)
+{
+	struct edt_ft5x06_ts_data *tsdata = container_of(
+					work, struct edt_ft5x06_ts_data, worker);
+	while(1) {
+		edt_ft5x06_ts_isr(0, tsdata);
+		msleep_interruptible(17);
+	}
+}
+
 static int edt_ft5x06_ts_probe(struct i2c_client *client,
 					 const struct i2c_device_id *id)
 {
@@ -1222,6 +1239,9 @@ static int edt_ft5x06_ts_probe(struct i2c_client *client,
 
 	i2c_set_clientdata(client, tsdata);
 
+	/* Assume that IRQ will work on SBC */
+	tsdata->irq_capability_enabled = 1;
+
 	irq_flags = irq_get_trigger_type(client->irq);
 	if (irq_flags == IRQF_TRIGGER_NONE)
 		irq_flags = IRQF_TRIGGER_FALLING;
@@ -1232,7 +1252,9 @@ static int edt_ft5x06_ts_probe(struct i2c_client *client,
 					client->name, tsdata);
 	if (error) {
 		dev_err(&client->dev, "Unable to request touchscreen IRQ.\n");
-		return error;
+		/* Don't stop me now: here we switch to polling mode later */
+		tsdata->irq_capability_enabled = 0;
+		/*return error;*/
 	}
 
 	error = devm_device_add_group(&client->dev, &edt_ft5x06_attr_group);
@@ -1251,6 +1273,14 @@ static int edt_ft5x06_ts_probe(struct i2c_client *client,
 		tsdata->wake_gpio ? desc_to_gpio(tsdata->wake_gpio) : -1,
 		tsdata->reset_gpio ? desc_to_gpio(tsdata->reset_gpio) : -1);
 
+	/* Fallback to scheduled task which polls the controller */
+	if (!tsdata->irq_capability_enabled) {
+		dev_info(&client->dev, 
+			"Note: EDT_FT5x06 touchscreen driver using worker task instead of IRQ!\n");
+		INIT_WORK(&tsdata->worker, edt_ft5x06_worker_proc);
+		schedule_work(&tsdata->worker);
+	}
+
 	return 0;
 }
 
-- 
Created with Armbian build tools https://github.com/armbian/build

